{"remainingRequest":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/babel-loader/lib/index.js!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/autocomplete.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/autocomplete.vue","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgYmluZFByb3BzLCBnZXRQcm9wc1ZhbHVlcyB9IGZyb20gJy4uL3V0aWxzL2JpbmRQcm9wcy5qcyc7CmltcG9ydCBkb3duQXJyb3dTaW11bGF0b3IgZnJvbSAnLi4vdXRpbHMvc2ltdWxhdGVBcnJvd0Rvd24uanMnOwppbXBvcnQgeyBtYXBwZWRQcm9wc1RvVnVlUHJvcHMgfSBmcm9tICcuL2J1aWxkLWNvbXBvbmVudCc7CmNvbnN0IG1hcHBlZFByb3BzID0gewogIGJvdW5kczogewogICAgdHlwZTogT2JqZWN0CiAgfSwKICBjb21wb25lbnRSZXN0cmljdGlvbnM6IHsKICAgIHR5cGU6IE9iamVjdCwKICAgIC8vIERvIG5vdCBiaW5kIC0tIG11c3QgY2hlY2sgZm9yIHVuZGVmaW5lZAogICAgLy8gaW4gdGhlIHByb3BlcnR5CiAgICBub0JpbmQ6IHRydWUKICB9LAogIHR5cGVzOiB7CiAgICB0eXBlOiBBcnJheSwKICAgIGRlZmF1bHQ6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtdOwogICAgfQogIH0KfTsKY29uc3QgcHJvcHMgPSB7CiAgc2VsZWN0Rmlyc3RPbkVudGVyOiB7CiAgICByZXF1aXJlZDogZmFsc2UsCiAgICB0eXBlOiBCb29sZWFuLAogICAgZGVmYXVsdDogZmFsc2UKICB9LAogIG9wdGlvbnM6IHsKICAgIHR5cGU6IE9iamVjdAogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRnbWFwQXBpUHJvbWlzZUxhenkoKS50aGVuKCgpID0+IHsKICAgICAgaWYgKHRoaXMuc2VsZWN0Rmlyc3RPbkVudGVyKSB7CiAgICAgICAgZG93bkFycm93U2ltdWxhdG9yKHRoaXMuJHJlZnMuaW5wdXQpOwogICAgICB9CgogICAgICBpZiAodHlwZW9mIGdvb2dsZS5tYXBzLnBsYWNlcy5BdXRvY29tcGxldGUgIT09ICdmdW5jdGlvbicpIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoImdvb2dsZS5tYXBzLnBsYWNlcy5BdXRvY29tcGxldGUgaXMgdW5kZWZpbmVkLiBEaWQgeW91IGFkZCAncGxhY2VzJyB0byBsaWJyYXJpZXMgd2hlbiBsb2FkaW5nIEdvb2dsZSBNYXBzPyIpOwogICAgICB9CiAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovCgoKICAgICAgY29uc3QgZmluYWxPcHRpb25zID0geyAuLi5nZXRQcm9wc1ZhbHVlcyh0aGlzLCBtYXBwZWRQcm9wcyksCiAgICAgICAgLi4udGhpcy5vcHRpb25zCiAgICAgIH07CiAgICAgIHRoaXMuJGF1dG9jb21wbGV0ZSA9IG5ldyBnb29nbGUubWFwcy5wbGFjZXMuQXV0b2NvbXBsZXRlKHRoaXMuJHJlZnMuaW5wdXQsIGZpbmFsT3B0aW9ucyk7CiAgICAgIGJpbmRQcm9wcyh0aGlzLCB0aGlzLiRhdXRvY29tcGxldGUsIG1hcHBlZFByb3BzKTsKICAgICAgdGhpcy4kd2F0Y2goJ2NvbXBvbmVudFJlc3RyaWN0aW9ucycsIHYgPT4gewogICAgICAgIGlmICh2ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIHRoaXMuJGF1dG9jb21wbGV0ZS5zZXRDb21wb25lbnRSZXN0cmljdGlvbnModik7CiAgICAgICAgfQogICAgICB9KTsgLy8gTm90IHVzaW5nIGBiaW5kRXZlbnRzYCBiZWNhdXNlIHdlIGFsc28gd2FudAogICAgICAvLyB0byByZXR1cm4gdGhlIHJlc3VsdCBvZiBgZ2V0UGxhY2UoKWAKCiAgICAgIHRoaXMuJGF1dG9jb21wbGV0ZS5hZGRMaXN0ZW5lcigncGxhY2VfY2hhbmdlZCcsICgpID0+IHsKICAgICAgICB0aGlzLiRlbWl0KCdwbGFjZV9jaGFuZ2VkJywgdGhpcy4kYXV0b2NvbXBsZXRlLmdldFBsYWNlKCkpOwogICAgICB9KTsKICAgIH0pOwogIH0sCgogIHByb3BzOiB7IC4uLm1hcHBlZFByb3BzVG9WdWVQcm9wcyhtYXBwZWRQcm9wcyksCiAgICAuLi5wcm9wcwogIH0KfTs="},{"version":3,"mappings":"AAKA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,uBAA1C;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,MAAMC,WAAU,GAAI;AAClBC,QAAM,EAAE;AACNC,QAAI,EAAEC;AADA,GADU;AAIlBC,uBAAqB,EAAE;AACrBF,QAAI,EAAEC,MADe;AAErB;AACA;AACAE,UAAM,EAAE;AAJa,GAJL;AAUlBC,OAAK,EAAE;AACLJ,QAAI,EAAEK,KADD;AAELC,WAAO,EAAE,YAAY;AACnB,aAAO,EAAP;AACD;AAJI;AAVW,CAApB;AAkBA,MAAMC,KAAI,GAAI;AACZC,oBAAkB,EAAE;AAClBC,YAAQ,EAAE,KADQ;AAElBT,QAAI,EAAEU,OAFY;AAGlBJ,WAAO,EAAE;AAHS,GADR;AAMZK,SAAO,EAAE;AACPX,QAAI,EAAEC;AADC;AANG,CAAd;AAWA,eAAe;AACbW,SAAO,GAAG;AACR,SAAKC,mBAAL,GAA2BC,IAA3B,CAAgC,MAAM;AACpC,UAAI,KAAKN,kBAAT,EAA6B;AAC3BZ,0BAAkB,CAAC,KAAKmB,KAAL,CAAWC,KAAZ,CAAlB;AACF;;AAEA,UAAI,OAAOC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAA1B,KAA2C,UAA/C,EAA2D;AACzD,cAAM,IAAIC,KAAJ,CACJ,2GADI,CAAN;AAGF;AAEA;;;AACA,YAAMC,YAAW,GAAI,EACnB,GAAG3B,cAAc,CAAC,IAAD,EAAOG,WAAP,CADE;AAEnB,WAAG,KAAKa;AAFW,OAArB;AAKA,WAAKY,aAAL,GAAqB,IAAIN,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CAAoC,KAAKL,KAAL,CAAWC,KAA/C,EAAsDM,YAAtD,CAArB;AACA5B,eAAS,CAAC,IAAD,EAAO,KAAK6B,aAAZ,EAA2BzB,WAA3B,CAAT;AAEA,WAAK0B,MAAL,CAAY,uBAAZ,EAAsCC,CAAD,IAAO;AAC1C,YAAIA,MAAMC,SAAV,EAAqB;AACnB,eAAKH,aAAL,CAAmBI,wBAAnB,CAA4CF,CAA5C;AACF;AACD,OAJD,EApBoC,CA0BpC;AACA;;AACA,WAAKF,aAAL,CAAmBK,WAAnB,CAA+B,eAA/B,EAAgD,MAAM;AACpD,aAAKC,KAAL,CAAW,eAAX,EAA4B,KAAKN,aAAL,CAAmBO,QAAnB,EAA5B;AACD,OAFD;AAGD,KA/BD;AAgCD,GAlCY;;AAmCbvB,OAAK,EAAE,EACL,GAAGV,qBAAqB,CAACC,WAAD,CADnB;AAEL,OAAGS;AAFE;AAnCM,CAAf","names":["bindProps","getPropsValues","downArrowSimulator","mappedPropsToVueProps","mappedProps","bounds","type","Object","componentRestrictions","noBind","types","Array","default","props","selectFirstOnEnter","required","Boolean","options","mounted","$gmapApiPromiseLazy","then","$refs","input","google","maps","places","Autocomplete","Error","finalOptions","$autocomplete","$watch","v","undefined","setComponentRestrictions","addListener","$emit","getPlace"],"sourceRoot":"","sources":["/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/autocomplete.vue"],"sourcesContent":["<template>\n  <input ref=\"input\" v-bind=\"$attrs\" v-on=\"$attrs\" />\n</template>\n\n<script>\nimport { bindProps, getPropsValues } from '../utils/bindProps.js'\nimport downArrowSimulator from '../utils/simulateArrowDown.js'\nimport { mappedPropsToVueProps } from './build-component'\n\nconst mappedProps = {\n  bounds: {\n    type: Object,\n  },\n  componentRestrictions: {\n    type: Object,\n    // Do not bind -- must check for undefined\n    // in the property\n    noBind: true,\n  },\n  types: {\n    type: Array,\n    default: function () {\n      return []\n    },\n  },\n}\n\nconst props = {\n  selectFirstOnEnter: {\n    required: false,\n    type: Boolean,\n    default: false,\n  },\n  options: {\n    type: Object,\n  },\n}\n\nexport default {\n  mounted() {\n    this.$gmapApiPromiseLazy().then(() => {\n      if (this.selectFirstOnEnter) {\n        downArrowSimulator(this.$refs.input)\n      }\n\n      if (typeof google.maps.places.Autocomplete !== 'function') {\n        throw new Error(\n          \"google.maps.places.Autocomplete is undefined. Did you add 'places' to libraries when loading Google Maps?\"\n        )\n      }\n\n      /* eslint-disable no-unused-vars */\n      const finalOptions = {\n        ...getPropsValues(this, mappedProps),\n        ...this.options,\n      }\n\n      this.$autocomplete = new google.maps.places.Autocomplete(this.$refs.input, finalOptions)\n      bindProps(this, this.$autocomplete, mappedProps)\n\n      this.$watch('componentRestrictions', (v) => {\n        if (v !== undefined) {\n          this.$autocomplete.setComponentRestrictions(v)\n        }\n      })\n\n      // Not using `bindEvents` because we also want\n      // to return the result of `getPlace()`\n      this.$autocomplete.addListener('place_changed', () => {\n        this.$emit('place_changed', this.$autocomplete.getPlace())\n      })\n    })\n  },\n  props: {\n    ...mappedPropsToVueProps(mappedProps),\n    ...props,\n  },\n}\n</script>\n"]}]}