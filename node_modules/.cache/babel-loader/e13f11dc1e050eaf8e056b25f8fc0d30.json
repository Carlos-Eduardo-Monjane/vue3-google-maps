{"remainingRequest":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/babel-loader/lib/index.js!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/infoWindow.vue?vue&type=template&id=6c9aa5b1","dependencies":[{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/infoWindow.vue","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyU2xvdCBhcyBfcmVuZGVyU2xvdCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKY29uc3QgX2hvaXN0ZWRfMSA9IHsKICByZWY6ICJpbmZvV2luZG93Igp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfcmVuZGVyU2xvdChfY3R4LiRzbG90cywgImRlZmF1bHQiKV0sIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApOwp9"},{"version":3,"mappings":";;AACOA,KAAG,EAAC;;;uBAATC,oBAEM,KAFN,cAEM,CADJC,YAAaC,WAAb,EAAa,SAAb,CACI,CAFN;;AAAA","names":["ref","_createElementBlock","_renderSlot","_ctx"],"sourceRoot":"","sources":["/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/infoWindow.vue"],"sourcesContent":["<template>\n  <div ref=\"infoWindow\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport buildComponent from './build-component.js'\n\nconst props = {\n  options: {\n    type: Object,\n    required: false,\n    default() {\n      return {}\n    },\n  },\n  position: {\n    type: Object,\n    twoWay: true,\n  },\n  zIndex: {\n    type: Number,\n    twoWay: true,\n  },\n}\n\nconst events = ['domready', 'click', 'closeclick', 'content_changed']\n\nexport default buildComponent({\n  mappedProps: props,\n  events,\n  name: 'infoWindow',\n  ctr: () => google.maps.InfoWindow,\n  props: {\n    opened: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  inject: {\n    $markerPromise: {\n      default: null,\n    },\n  },\n\n  mounted() {\n    const el = this.$refs.infoWindow\n    el.parentNode.removeChild(el)\n  },\n\n  beforeCreate(options) {\n    options.content = this.$refs.infoWindow\n\n    if (this.$markerPromise) {\n      delete options.position\n      return this.$markerPromise.then((mo) => {\n        this.$markerObject = mo\n        return mo\n      })\n    }\n  },\n  emits: ['closeclick'],\n  methods: {\n    _openInfoWindow() {\n      this.$infoWindowObject.close()\n      if (this.opened) {\n        this.$infoWindowObject.open(this.$map, this.$markerObject)\n      } else {\n        this.$emit('closeclick')\n      }\n    },\n  },\n\n  afterCreate() {\n    this._openInfoWindow()\n    this.$watch('opened', () => {\n      this._openInfoWindow()\n    })\n  },\n})\n</script>\n"]}]}