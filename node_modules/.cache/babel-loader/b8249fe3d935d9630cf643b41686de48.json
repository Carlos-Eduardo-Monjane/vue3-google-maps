{"remainingRequest":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/babel-loader/lib/index.js!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/marker.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/marker.vue","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGJ1aWxkQ29tcG9uZW50IGZyb20gJy4vYnVpbGQtY29tcG9uZW50LmpzJzsKY29uc3QgcHJvcHMgPSB7CiAgYW5pbWF0aW9uOiB7CiAgICB0d29XYXk6IHRydWUsCiAgICB0eXBlOiBOdW1iZXIKICB9LAogIGF0dHJpYnV0aW9uOiB7CiAgICB0eXBlOiBPYmplY3QKICB9LAogIGNsaWNrYWJsZTogewogICAgdHlwZTogQm9vbGVhbiwKICAgIHR3b1dheTogdHJ1ZSwKICAgIGRlZmF1bHQ6IHRydWUKICB9LAogIGN1cnNvcjogewogICAgdHlwZTogU3RyaW5nLAogICAgdHdvV2F5OiB0cnVlCiAgfSwKICBkcmFnZ2FibGU6IHsKICAgIHR5cGU6IEJvb2xlYW4sCiAgICB0d29XYXk6IHRydWUsCiAgICBkZWZhdWx0OiBmYWxzZQogIH0sCiAgaWNvbjogewogICAgdHdvV2F5OiB0cnVlCiAgfSwKICBsYWJlbDoge30sCiAgb3BhY2l0eTogewogICAgdHlwZTogTnVtYmVyLAogICAgZGVmYXVsdDogMQogIH0sCiAgb3B0aW9uczogewogICAgdHlwZTogT2JqZWN0CiAgfSwKICBwbGFjZTogewogICAgdHlwZTogT2JqZWN0CiAgfSwKICBwb3NpdGlvbjogewogICAgdHlwZTogT2JqZWN0LAogICAgdHdvV2F5OiB0cnVlCiAgfSwKICBzaGFwZTogewogICAgdHlwZTogT2JqZWN0LAogICAgdHdvV2F5OiB0cnVlCiAgfSwKICB0aXRsZTogewogICAgdHlwZTogU3RyaW5nLAogICAgdHdvV2F5OiB0cnVlCiAgfSwKICB6SW5kZXg6IHsKICAgIHR5cGU6IE51bWJlciwKICAgIHR3b1dheTogdHJ1ZQogIH0sCiAgdmlzaWJsZTogewogICAgdHdvV2F5OiB0cnVlLAogICAgZGVmYXVsdDogdHJ1ZQogIH0KfTsKY29uc3QgZXZlbnRzID0gWydjbGljaycsICdyaWdodGNsaWNrJywgJ2RibGNsaWNrJywgJ2RyYWcnLCAnZHJhZ3N0YXJ0JywgJ2RyYWdlbmQnLCAnbW91c2V1cCcsICdtb3VzZWRvd24nLCAnbW91c2VvdmVyJywgJ21vdXNlb3V0J107CmV4cG9ydCBkZWZhdWx0IGJ1aWxkQ29tcG9uZW50KHsKICBtYXBwZWRQcm9wczogcHJvcHMsCiAgZXZlbnRzLAogIG5hbWU6ICdtYXJrZXInLAogIGN0cjogKCkgPT4gZ29vZ2xlLm1hcHMuTWFya2VyLAogIGluamVjdDogewogICAgJGNsdXN0ZXJQcm9taXNlOiB7CiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0KICB9LAogIGVtaXRzOiBldmVudHMsCgogIHVubW91bnRlZCgpIHsKICAgIGlmICghdGhpcy4kbWFya2VyT2JqZWN0KSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAodGhpcy4kY2x1c3Rlck9iamVjdCkgewogICAgICAvLyBSZXBhaW50IHdpbGwgYmUgcGVyZm9ybWVkIGluIGB1cGRhdGVkKClgIG9mIGNsdXN0ZXIKICAgICAgdGhpcy4kY2x1c3Rlck9iamVjdC5yZW1vdmVNYXJrZXIodGhpcy4kbWFya2VyT2JqZWN0LCB0cnVlKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuJG1hcmtlck9iamVjdC5zZXRNYXAobnVsbCk7CiAgICB9CiAgfSwKCiAgYmVmb3JlQ3JlYXRlKG9wdGlvbnMpIHsKICAgIGlmICh0aGlzLiRjbHVzdGVyUHJvbWlzZSkgewogICAgICBvcHRpb25zLm1hcCA9IG51bGw7CiAgICB9CgogICAgcmV0dXJuIHRoaXMuJGNsdXN0ZXJQcm9taXNlOwogIH0sCgogIGFmdGVyQ3JlYXRlKGluc3QpIHsKICAgIGV2ZW50cy5mb3JFYWNoKGV2ZW50ID0+IHsKICAgICAgaW5zdC5hZGRMaXN0ZW5lcihldmVudCwgcGF5bG9hZCA9PiB7CiAgICAgICAgdGhpcy4kZW1pdChldmVudCwgcGF5bG9hZCk7CiAgICAgIH0pOwogICAgfSk7CgogICAgaWYgKHRoaXMuJGNsdXN0ZXJQcm9taXNlKSB7CiAgICAgIHRoaXMuJGNsdXN0ZXJQcm9taXNlLnRoZW4oY28gPT4gewogICAgICAgIHRoaXMuJGNsdXN0ZXJPYmplY3QgPSBjbzsKICAgICAgICBjby5hZGRNYXJrZXIoaW5zdCk7CiAgICAgIH0pOwogICAgfQogIH0KCn0pOw=="},{"version":3,"mappings":"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","names":["buildComponent","props","animation","twoWay","type","Number","attribution","Object","clickable","Boolean","default","cursor","String","draggable","icon","label","opacity","options","place","position","shape","title","zIndex","visible","events","mappedProps","name","ctr","google","maps","Marker","inject","$clusterPromise","emits","unmounted","$markerObject","$clusterObject","removeMarker","setMap","beforeCreate","map","afterCreate","inst","forEach","event","addListener","payload","$emit","then","co","addMarker"],"sourceRoot":"","sources":["/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/marker.vue"],"sourcesContent":["<template>\n  <div @click=\"()=> {console.log('sdfsd')}\">\n    <slot></slot>\n  </div>\n</template>\n<script>\n\nimport buildComponent from './build-component.js'\n\nconst props = {\n  animation: {\n    twoWay: true,\n    type: Number,\n  },\n  attribution: {\n    type: Object,\n  },\n  clickable: {\n    type: Boolean,\n    twoWay: true,\n    default: true,\n  },\n  cursor: {\n    type: String,\n    twoWay: true,\n  },\n  draggable: {\n    type: Boolean,\n    twoWay: true,\n    default: false,\n  },\n  icon: {\n    twoWay: true,\n  },\n  label: {},\n  opacity: {\n    type: Number,\n    default: 1,\n  },\n  options: {\n    type: Object,\n  },\n  place: {\n    type: Object,\n  },\n  position: {\n    type: Object,\n    twoWay: true,\n  },\n  shape: {\n    type: Object,\n    twoWay: true,\n  },\n  title: {\n    type: String,\n    twoWay: true,\n  },\n  zIndex: {\n    type: Number,\n    twoWay: true,\n  },\n  visible: {\n    twoWay: true,\n    default: true,\n  },\n}\n\nconst events = [\n  'click',\n  'rightclick',\n  'dblclick',\n  'drag',\n  'dragstart',\n  'dragend',\n  'mouseup',\n  'mousedown',\n  'mouseover',\n  'mouseout',\n]\n\nexport default buildComponent({\n  mappedProps: props,\n  events,\n  name: 'marker',\n  ctr: () => google.maps.Marker,\n\n  inject: {\n    $clusterPromise: {\n      default: null,\n    },\n  },\n  emits: events,\n  unmounted() {\n    if (!this.$markerObject) {\n      return\n    }\n\n    if (this.$clusterObject) {\n      // Repaint will be performed in `updated()` of cluster\n      this.$clusterObject.removeMarker(this.$markerObject, true)\n    } else {\n      this.$markerObject.setMap(null)\n    }\n  },\n\n  beforeCreate(options) {\n    if (this.$clusterPromise) {\n      options.map = null\n    }\n\n    return this.$clusterPromise\n  },\n\n  afterCreate(inst) {\n    events.forEach((event)=> {\n      inst.addListener(event, (payload)=> {\n        this.$emit(event, payload)\n      });\n    })\n    if (this.$clusterPromise) {\n      this.$clusterPromise.then((co) => {\n        this.$clusterObject = co\n        co.addMarker(inst)\n      })\n    }\n  },\n})\n</script>\n"]}]}