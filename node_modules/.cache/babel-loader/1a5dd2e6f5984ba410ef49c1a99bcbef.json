{"remainingRequest":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/babel-loader/lib/index.js!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/map.vue?vue&type=template&id=0c1aca79","dependencies":[{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/map.vue","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlbmRlclNsb3QgYXMgX3JlbmRlclNsb3QsIG5vcm1hbGl6ZUNsYXNzIGFzIF9ub3JtYWxpemVDbGFzcywgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKY29uc3QgX2hvaXN0ZWRfMSA9IHsKICByZWY6ICJ2dWUtbWFwIiwKICBjbGFzczogInZ1ZS1tYXAiCn07CmNvbnN0IF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJ2dWUtbWFwLWhpZGRlbiIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCB7CiAgICBjbGFzczogX25vcm1hbGl6ZUNsYXNzKFsidnVlLW1hcC1jb250YWluZXIiLCBfY3R4LiRhdHRycy5jbGFzc10pCiAgfSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX3JlbmRlclNsb3QoX2N0eC4kc2xvdHMsICJkZWZhdWx0IildKSwgX3JlbmRlclNsb3QoX2N0eC4kc2xvdHMsICJ2aXNpYmxlIildLCAyCiAgLyogQ0xBU1MgKi8KICApOwp9"},{"version":3,"mappings":";;AAESA,KAAG,EAAC;AAAUC,OAAK,EAAC;;;AACpBA,OAAK,EAAC;;;uBAFbC,oBAMM,KANN,EAMM;AANDD,SAAK,mBAAC,mBAAD,EAA6BE,YAAOF,KAApC;AAMJ,GANN,GACEG,oBAAyC,KAAzC,cAAyC,IAAzC,EAAyC;AAAA;AAAzC,KACAA,oBAEM,KAFN,cAEM,CADJC,YAAaF,WAAb,EAAa,SAAb,CACI,CAFN,GAGAE,YAA4BF,WAA5B,EAA4B,SAA5B,EALF;;AAAA","names":["ref","class","_createElementBlock","_ctx","_createElementVNode","_renderSlot"],"sourceRoot":"","sources":["/Users/carlos/ikTech/google_map_vue3/vue3-google-maps/node_modules/@fawmi/vue-google-maps/src/components/map.vue"],"sourcesContent":["<template>\n  <div class=\"vue-map-container\" :class=\"$attrs.class\">\n    <div ref=\"vue-map\" class=\"vue-map\"></div>\n    <div class=\"vue-map-hidden\">\n      <slot></slot>\n    </div>\n    <slot name=\"visible\"></slot>\n  </div>\n</template>\n\n<script>\nimport bindEvents from '../utils/bindEvents.js'\nimport { bindProps, getPropsValues } from '../utils/bindProps.js'\nimport mountableMixin from '../utils/mountableMixin.js'\n\nimport TwoWayBindingWrapper from '../utils/TwoWayBindingWrapper.js'\nimport WatchPrimitiveProperties from '../utils/WatchPrimitiveProperties.js'\nimport { mappedPropsToVueProps } from './build-component.js'\n\nconst props = {\n  center: {\n    required: true,\n    twoWay: true,\n    type: Object,\n    noBind: true,\n  },\n  zoom: {\n    required: false,\n    twoWay: true,\n    type: Number,\n    noBind: true,\n  },\n  heading: {\n    type: Number,\n    twoWay: true,\n  },\n  mapTypeId: {\n    twoWay: true,\n    type: String,\n  },\n  tilt: {\n    twoWay: true,\n    type: Number,\n  },\n  options: {\n    type: Object,\n    default() {\n      return {}\n    },\n  },\n}\n\nconst events = [\n  'bounds_changed',\n  'click',\n  'dblclick',\n  'drag',\n  'dragend',\n  'dragstart',\n  'idle',\n  'mousemove',\n  'mouseout',\n  'mouseover',\n  'resize',\n  'rightclick',\n  'tilesloaded',\n]\n\n// Plain Google Maps methods exposed here for convenience\nconst linkedMethods = ['panBy', 'panTo', 'panToBounds', 'fitBounds'].reduce((all, methodName) => {\n  all[methodName] = function () {\n    if (this.$mapObject) {\n      this.$mapObject[methodName].apply(this.$mapObject, arguments)\n    }\n  }\n  return all\n}, {})\n\n// Other convenience methods exposed by Vue Google Maps\nconst customMethods = {\n  resize() {\n    if (this.$mapObject) {\n      google.maps.event.trigger(this.$mapObject, 'resize')\n    }\n  },\n  resizePreserveCenter() {\n    if (!this.$mapObject) {\n      return\n    }\n\n    const oldCenter = this.$mapObject.getCenter()\n    google.maps.event.trigger(this.$mapObject, 'resize')\n    this.$mapObject.setCenter(oldCenter)\n  },\n\n  /// Override mountableMixin::_resizeCallback\n  /// because resizePreserveCenter is usually the\n  /// expected behaviour\n  _resizeCallback() {\n    this.resizePreserveCenter()\n  },\n}\n\nexport default {\n  mixins: [mountableMixin],\n  props: mappedPropsToVueProps({...props, ...events.reduce((obj, eventName) => ({...obj, [`on${eventName.charAt(0).toUpperCase()}${eventName.slice(1)}`.replace(/[-_]+(.)?/g, (_, c) => c ? c.toUpperCase() : '')]: Function}), {}) } ),\n  inheritAttrs: false,\n\n  provide() {\n    this.$mapPromise = new Promise((resolve, reject) => {\n      this.$mapPromiseDeferred = { resolve, reject }\n    })\n    return {\n      $mapPromise: this.$mapPromise,\n    }\n  },\n  emits: ['center_changed', 'zoom_changed', 'bounds_changed'],\n  computed: {\n    finalLat() {\n      return this.center && typeof this.center.lat === 'function'\n        ? this.center.lat()\n        : this.center.lat\n    },\n    finalLng() {\n      return this.center && typeof this.center.lng === 'function'\n        ? this.center.lng()\n        : this.center.lng\n    },\n    finalLatLng() {\n      return { lat: this.finalLat, lng: this.finalLng }\n    },\n  },\n\n  watch: {\n    zoom(zoom) {\n      if (this.$mapObject) {\n        this.$mapObject.setZoom(zoom)\n      }\n    },\n  },\n\n  mounted() {\n    return this.$gmapApiPromiseLazy()\n      .then(() => {\n        // getting the DOM element where to create the map\n        const element = this.$refs['vue-map']\n\n        // creating the map\n        const options = {\n          ...this.options,\n          ...getPropsValues(this, props),\n        }\n        delete options.options\n        this.$mapObject = new google.maps.Map(element, options)\n\n        // binding properties (two and one way)\n        bindProps(this, this.$mapObject, props)\n        // binding events\n        bindEvents(this, this.$mapObject, events)\n\n        // manually trigger center and zoom\n        TwoWayBindingWrapper((increment, decrement, shouldUpdate) => {\n          this.$mapObject.addListener('center_changed', () => {\n            if (shouldUpdate()) {\n              this.$emit('center_changed', this.$mapObject.getCenter())\n            }\n            decrement()\n          })\n\n          const updateCenter = () => {\n            increment()\n            this.$mapObject.setCenter(this.finalLatLng)\n          }\n\n          WatchPrimitiveProperties(this, ['finalLat', 'finalLng'], updateCenter)\n        })\n        this.$mapObject.addListener('zoom_changed', () => {\n          this.$emit('zoom_changed', this.$mapObject.getZoom())\n        })\n        this.$mapObject.addListener('bounds_changed', () => {\n          this.$emit('bounds_changed', this.$mapObject.getBounds())\n        })\n\n        this.$mapPromiseDeferred.resolve(this.$mapObject)\n\n        return this.$mapObject\n      })\n      .catch((error) => {\n        throw error\n      })\n  },\n  methods: {\n    ...customMethods,\n    ...linkedMethods,\n  },\n}\n</script>\n<style>\n.vue-map {\n  width: 100%;\n  height: 100%;\n  min-height: 2rem;\n}\n</style>\n"]}]}